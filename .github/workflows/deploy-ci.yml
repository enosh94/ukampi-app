name: Building Joint image and deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  deploy-to-server:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - id: 'gcloud'
      name: 'gcloud'
      run: gcloud auth configure-docker europe-southwest1-docker.pkg.dev --quiet

    - name: Login to GAR
      uses: docker/login-action@v2
      with:
        registry: ${{vars.REGISTRY_URL}}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        images: |
          ${{vars.REGISTRY_URL}}/${{vars.PROJECT_ID}}/${{vars.APP_REPOSITORY_NAME}}/${{vars.APP_DOCKER_IMAGE_NAME}}
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}

    # - id: build-and-push-joint-docker-image
    #   name: Build and push
    #   uses: docker/build-push-action@v3
    #   with:
    #     context: ./docker
    #     platforms: linux/amd64
    #     file: ./docker/Dockerfile
    #     push: true
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}
    #     build-args: |
    #       DOCKER_METADATA_OUTPUT_JSON
    #       SERVER_DOCKER_IMAGE=${{vars.REGISTRY_URL}}/${{vars.PROJECT_ID}}/${{vars.SERVER_REPOSITORY_NAME}}/${{vars.SERVER_DOCKER_IMAGE_NAME}}
    #       CONFIGURATOR_DOCKER_IMAGE=${{vars.REGISTRY_URL}}/${{vars.PROJECT_ID}}/${{vars.CONFIGURATOR_REPOSITORY_NAME}}/${{vars.CONFIGURATOR_DOCKER_IMAGE_NAME}}

    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ vars.SSH_SERVER_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        # rm: true
        source: "docker-compose.yml,compose-data"
        target: "/home/ukampi/docker/ukampi-app"

    - name: Deploy to docker
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ vars.SSH_SERVER_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: | 
          gcloud auth configure-docker europe-southwest1-docker.pkg.dev --quiet
          ${{ steps.auth.outputs.access_token }} | docker login --username=oauth2accesstoken ${{vars.REGISTRY_URL}} --password-stdin
          cd /home/ukampi/docker/ukampi-app
          sudo chmod -R 777 compose-data/
          docker compose pull
          docker compose up --detach