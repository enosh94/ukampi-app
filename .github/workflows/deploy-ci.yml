name: Building Joint image and deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  server-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        images: |
          ${{vars.REGISTRY_URL}}/${{vars.PROJECT_ID}}/${{vars.APP_REPOSITORY_NAME}}/${{vars.APP_DOCKER_IMAGE_NAME}}:latest
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - id: 'gcloud'
      name: 'gcloud'
      run: gcloud auth configure-docker europe-southwest1-docker.pkg.dev --quiet

    - name: Login to GAR
      uses: docker/login-action@v2
      with:
        registry: ${{vars.REGISTRY_URL}}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - id: build-and-push-joint-docker-image
      name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: linux/amd64
        file: ./docker/Dockerfile
        push: true
        build-args: |
          DOCKER_METADATA_OUTPUT_JSON
          SERVER_DOCKER_IMAGE=${{vars.REGISTRY_URL}}/${{vars.PROJECT_ID}}/${{vars.SERVER_REPOSITORY_NAME}}/${{vars.SERVER_DOCKER_IMAGE_NAME}}:latest
          CONFIGURATOR_DOCKER_IMAGE=${{vars.REGISTRY_URL}}/${{vars.PROJECT_ID}}/${{vars.CONFIGURATOR_REPOSITORY_NAME}}/${{vars.CONFIGURATOR_DOCKER_IMAGE_NAME}}:latest

    - name: copy docker-compose.yml via ssh
      if: |
        always() && 
        (steps.build-and-push-joint-docker-image == 'success')
      uses: appleboy/scp-action@master
      with:
        host: ${{ vars.SSH_SERVER_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        rm: true
        source: "docker-compose.yml"
        target: "/home/ukampi/docker/ukampi-app"

    - name: Deploy to docker
      if: |
        always() && 
        (steps.build-and-push-joint-docker-image == 'success')
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ vars.SSH_SERVER_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: | 
          ${{ steps.auth.outputs.access_token }} | docker login --username=oauth2accesstoken ${{vars.REGISTRY_URL}} --password-stdin
          cd /home/ukampi/docker/ukampi-app
          docker-compose pull
          docker-compose up --detach