name: Server CI

on:
  push:
    branches:
      - 'releases/**'
    paths:
      - 'server/**'
  pull_request:
    types:
      - closed
    branches:
      - 'release/**'
    paths:
      - 'server/**'
  workflow_dispatch:

jobs:
  server-build:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.17

    - uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x

    - uses: actions/cache@v3
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        #  ~/Library/Caches/go-build
        #  %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build Server
      run: |
        go mod download
        go build
      working-directory: ./server

    - name: Check whether golang code was changed
      id: go-change
      run: |
        git diff @~..@ --quiet server || echo ::set-output name=server::1
#       echo ::set-output name=server::1
#       echo ::set-output name=backend::1
#        git diff @~..@ --quiet configurator/backend || echo ::set-output name=backend::1
      working-directory: ./

    - id: 'auth'
      if: ${{ success() && (steps.go-change.outputs.server == 1) }}
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - id: 'gcloud'
      name: 'gcloud'
      run: gcloud auth configure-docker europe-southwest1-docker.pkg.dev --quiet

    - name: Login to GAR
      if: ${{ success() && (steps.go-change.outputs.server == 1) }}
      uses: docker/login-action@v2
      with:
        registry: ${{vars.REGISTRY_URL}}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - id: build-and-push
      name: Build and push
      if: ${{ success() && (steps.go-change.outputs.server == 1) }}
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        file: server.Dockerfile
        push: true
        tags: ${{vars.REGISTRY_URL}}/${{vars.PROJECT_ID}}/${{vars.SERVER_REPOSITORY_NAME}}/${{vars.SERVER_DOCKER_IMAGE_NAME}}:latest